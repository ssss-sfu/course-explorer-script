[{"requirement": "Lower Divison Core", "courses": [{"subject": "CMPT", "number": "105W", "title": "Social Issues and Communication Strategies in Computing Science", "description": "This course teaches the fundamentals of informative and persuasive communication for professional engineers and computer scientists. A principal goal of this course is to assist students in thinking critically about various contemporary technical, social, and ethical issues. It focuses on communicating technical information clearly and concisely, managing issues of persuasion when communicating with diverse audiences, presentation skills, and teamwork."}, {"subject": "CMPT", "number": "130", "title": "Introduction to Computer Programming I", "description": "An introduction to computing science and computer programming, using a systems oriented language, such as C or C++. This course introduces basic computing science concepts. Topics will include: elementary data types, control structures, functions, arrays and strings, fundamental algorithms, computer organization and memory management."}, {"subject": "CMPT", "number": "135", "title": "Introduction to Computer Programming II", "description": "A second course in systems-oriented programming and computing science that builds upon the foundation set in CMPT 130 using a systems-oriented language such as C or C++. Topics: a review of the basic elements of programming; introduction to object-oriented programming (OOP); techniques for designing and testing programs; use and implementation of elementary data structures and\r\nalgorithms; introduction to embedded systems programming."}, {"subject": "CMPT", "number": "210", "title": "Probability and Computing", "description": "Probability has become an essential tool in modern computer science with applications in randomized algorithms, computer vision and graphics, systems, data analysis, and machine learning. The course introduces the foundational concepts in probability as required by many modern applications in computing."}, {"subject": "CMPT", "number": "213", "title": "Object Oriented Design in Java", "description": "An introduction to object oriented design using Java. The Java programming language is introduced,\r\nwith an emphasis on its advanced features. The course covers the building blocks of object oriented\r\ndesign including inheritance, polymorphism, interfaces and abstract classes. A number of object oriented design patterns are presented, such as observer, iterator, and singleton. The course also teaches best-practices in code construction. It includes a basic introduction to programming event driven graphical user interfaces."}, {"subject": "CMPT", "number": "225", "title": "Data Structures and Programming", "description": "Introduction to a variety of practical and important data structures and methods for implementation and for experimental and analytical evaluation. Topics include: stacks, queues and lists; search trees; hash tables and algorithms; efficient sorting; object-oriented programming; time and space efficiency analysis; and experimental evaluation. "}, {"subject": "CMPT", "number": "276", "title": "Introduction to Software Engineering", "description": "An overview of various techniques used for software development and software project management. Major tasks and phases in modern software development, including requirements, analysis, documentation, design, implementation, testing,and maintenance. Project management issues are also introduced. Students complete a team project using an iterative development process."}, {"subject": "CMPT", "number": "295", "title": "Introduction to Computer Systems", "description": "The curriculum introduces students to topics in computer architecture that are considered fundamental to an understanding of the digital systems underpinnings of computer systems. "}, {"subject": "MACM", "number": "101", "title": "Discrete Mathematics I", "description": "Introduction to graph theory, trees, induction, automata theory, formal reasoning, modular arithmetic."}, {"subject": "MSE", "number": "110", "title": "Mechatronics Design I", "description": "First year project course designed to provide students with a first exposure to the challenges of project organization. Students are responsible for designing and constructing a mechanical robot optimized to solve a particular chosen task. The engineering challenges of the project are expected to focus half on mechanical design and half on control algorithm design and implementation."}, {"subject": "STAT", "number": "271", "title": "Probability and Statistics for Computing Science", "description": "This is an introductory course in probability and statistics that is designed for Computer Science students. Mainly covers basic probability theory and statistical methods for designing and analyzing computing algorithms and systems. Topics include continuous probability distributions, random variables, multivariate normal distributions, parameter estimation and inference theory, as well as design and analysis of statistical studies, including hypothesis testing and presentation of statistical data."}, {"subject": "MATH", "number": "150", "title": "Calculus I with Review", "description": "Designed for students specializing in mathematics, physics, chemistry, computing science and engineering. Topics as for Math 151 with a more extensive review of functions, their properties and their graphs. Recommended for students with no previous knowledge of Calculus. In addition to regularly scheduled lectures, students enrolled in this course are encouraged to come for assistance to the Calculus Workshop (Burnaby), or Math Open Lab (Surrey). "}, {"subject": "MATH", "number": "151", "title": "Calculus I", "description": "Designed for students specializing in mathematics, physics, chemistry, computing science and engineering. Logarithmic and exponential functions, trigonometric functions, inverse functions. Limits, continuity, and derivatives. Techniques of differentiation, including logarithmic and implicit differentiation. The Mean Value Theorem. Applications of differentiation including extrema, curve sketching, Newton's method. Introduction to modeling with differential equations. Polar coordinates, parametric curves. "}, {"subject": "MATH", "number": "152", "title": "Calculus II", "description": "Riemann sum, Fundamental Theorem of Calculus, definite, indefinite and improper integrals, approximate integration, integration techniques, applications of integration. First-order separable differential equations and growth models. Sequences and series, series tests, power series, convergence and applications of power series."}, {"subject": "MATH", "number": "232", "title": "Applied Linear Algebra", "description": "Linear equations, matrices, determinants. Introduction to vector spaces and linear transformations and bases. Complex numbers. Eigenvalues and eigenvectors; diagonalization. Inner products and orthogonality; least squares problems. An emphasis on applications involving matrix and vector calculations."}]}, {"requirement": "Upper Divison Core", "courses": [{"subject": "CMPT", "number": "307", "title": "Data Structures and Algorithms", "description": "Design and analysis of efficient data structures and algorithms. General techniques for building and analyzing algorithms (greedy, divide & conquer, dynamic programming, network flows). Introduction to NP-completeness."}, {"subject": "CMPT", "number": "376W", "title": "Professional Responsibility and Technical Writing", "description": "Covers professional writing in computing science, including format conventions and technical reports. The basis for ethical decision-making and the methodology for reaching ethical decisions concerning computing matters will be studied. Students will survey and write research papers, and both individual and group work will be emphasized."}]}, {"requirement": "Systems Requirements", "courses": [{"subject": "CMPT", "number": "300", "title": "Operating Systems I", "description": "This course aims to give the student an understanding of what a modern operating system is, and the services it provides. It also discusses some basic issues in operating systems and provides solutions. Topics include multiprogramming, process management, memory management, and file systems."}, {"subject": "CMPT", "number": "354", "title": "Database Systems I", "description": "Logical representations of data records. Data models. Studies of some popular file and database systems. Document retrieval. Other related issues such as database administration, data dictionary and security."}, {"subject": "CMPT", "number": "371", "title": "Data Communications and Networking", "description": "Data communication fundamentals (data types, rates, and transmission media). Network architectures for local and wide areas. Communications protocols suitable for various architectures. ISO protocols and internetworking. Performance analysis under various loadings and channel error rates."}, {"subject": "CMPT", "number": "372", "title": "Web II - Server-side Development", "description": "Introduces students to the fundamentals of server-side web development. Students will gain experience working with backend web frameworks, designing and implementing web APIs, and deploying web systems. Students will be introduced to popular back-end frameworks. The course will focus on the design, creating, implementation, and deployment of backend systems, including APIs."}, {"subject": "CMPT", "number": "431", "title": "Distributed Systems", "description": "An introduction to distributed systems: systems consisting of multiple physical components connected over a network. Architectures of such systems, ranging from client-server to peer-to-peer. Distributed systems are analyzed via case studies of real network file systems, replicated systems, sensor networks and peer-to-peer systems. Hands-on experience designing and implementing a complex distributed system."}, {"subject": "CMPT", "number": "433", "title": "Embedded Systems", "description": "The basics of embedded system organization, hardware-software co-design, and programmable chip technologies are studied. Formal models and specification languages for capturing and analyzing the behavior of embedded systems. The design and use of tools for system partitioning and hardware/software co-design implementation, validation, and verification are also studied."}, {"subject": "CMPT", "number": "454", "title": "Database Systems II", "description": "An advanced course on database systems which covers crash recovery, concurrency control, transaction processing, distributed database systems as the core material and a set of selected topics based on the new developments and research interests, such as object-oriented data models and systems, extended relational systems, deductive database systems, and security and integrity."}, {"subject": "CMPT", "number": "471", "title": "Networking II", "description": "This course covers the fundamentals of higher level network functionality such as remote procedure/object calls, name/address resolution, network file systems, network security and high speed connectivity/bridging/switching."}]}, {"requirement": "Software Engineering Requirements", "courses": [{"subject": "CMPT", "number": "373", "title": "Software Development Methods", "description": "Survey of modern software development methodology. Several software development process models will be examined, as will the general principles behind such models. Provides experience with different programming paradigms and their advantages and disadvantages during software development."}, {"subject": "CMPT", "number": "473", "title": "Software Testing, Reliability and Security", "description": "Methods for software quality assurance focusing on reliability and security. Test coverage and test data adequacy including combinatorial testing. MC/DC testing, and mutation testing. Security engineering techniques for vulnerability discovery and mitigation including fuzz testing. Testing techniques will be applied to the assessment of external open source software."}, {"subject": "CMPT", "number": "379", "title": "Principles of Compiler Design", "description": "This course covers the key components of a compiler for a high level programming language. Topics include lexical analysis, parsing, type checking, code generation and optimization. Students will work in teams to design and implement an actual compiler making use of tools such as lex and yacc. "}, {"subject": "CMPT", "number": "383", "title": "Comparative Programming Languages", "description": "Various concepts and principles underlying the design and use of modern programming languages are considered in the context of procedural, object-oriented, functional and logic programming languages. Topics include data and control structuring constructs, facilities for modularity and data abstraction, polymorphism, syntax, and formal semantics."}, {"subject": "CMPT", "number": "384", "title": "Symbolic Computing", "description": "This course considers modelling and programming techniques appropriate for symbolic data domains such as mathematical expressions, logical formulas, grammars and programming languages. Topics include recursive and functional programming style, grammar-based data abstraction, simplification and reduction transformations, conversions to canonical form, environment data structures and interpreters, metaprogramming, pattern matching and theorem proving."}, {"subject": "CMPT", "number": "474", "title": "Web Systems Architecture", "description": "Web service based systems are fundamentally different from traditional software systems. The conceptual and methodological differences between a standard software development process and the development of a web service based information system. The technology involved during the construction of their own web service based application in an extensive project."}, {"subject": "CMPT", "number": "477", "title": "Introduction to Formal Verification", "description": "Introduces, at an accessible level, a formal framework for symbolic model checking, one of the most important verification methods. The techniques are illustrated with examples of verification of reactive systems and communication protocols. Students learn to work with a model checking tool."}]}, {"requirement": "Capstone Project Requirements", "courses": [{"subject": "CMPT", "number": "494", "title": "Software Systems Program Capstone Project I", "description": "This course is the first in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams on a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer application specification, as their basis. Students will be required to write a full project report and present their project during the Capstone Project Day Presentations."}, {"subject": "CMPT", "number": "495", "title": "Software Systems Capstone Project II", "description": "This course is the second in a series of two 3 unit courses for the Software Systems Capstone Project. Students will work in teams or a closely supervised software systems project. Projects can be research based or have a significant software application, potentially based on a real customer specification. Students will be required to write a final project report at the end of the term and do a project presentation during the Capstone Presentation Day."}]}]